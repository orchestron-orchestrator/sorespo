import file
import process

import orchestron.build
import orchestron.yang as oyang
from transform_list_order import remove_list_user_order
from transform_filter_schema import filter_schema

actor main(env):
    fc = file.FileCap(env.cap)
    pc = process.ProcessCap(env.cap)

    orchestron.build.apply_schema_transforms_to_dir(fc, "yang/CiscoIosXr_24_1_ncs55a1", [
        orchestron.build.SchemaTransformChain(".*yang.orig", [orchestron.build.SchemaTransformNoComments()])
    ])
    orchestron.build.apply_schema_transforms_to_dir(fc, "yang/NokiaSRLinux_25_3_2", [
        orchestron.build.SchemaTransformChain(".*yang.orig", [orchestron.build.SchemaTransformNoComments()])
    ])

    cfs_layer = orchestron.build.Layer.from_dir(fc, "yang/cfs")
    cfs_layer.models.append(oyang.ietf_inet_types)
    inter_layer = orchestron.build.Layer.from_dir(fc, "yang/inter")
    inter_layer.models.append(oyang.ietf_inet_types)
    rfs_layer = orchestron.build.Layer.from_dir(fc, "yang/rfs")
    rfs_layer.models.extend([oyang.rfs, oyang.ietf_inet_types])

    def transform_list_order(dt):
        paths = [
            "/jc:configuration/protocols/bgp/group/neighbor",
            "/jc:configuration/protocols/mpls/interface",
        ]
        remove_list_user_order(dt.root, paths)
        return dt

    def transform_filter(dt):
        # The original list of paths was auto-generated by comparing the old
        # (augmented junos-conf-root) with new (single junos-conf-root) model
        # and printing the common paths. The list here is a result of manual
        # pruning to include (approximately) what we actually use in rfs.act.
        # Optimized compile time from 50s to 5s.
        paths = [
    "/jc:configuration/interfaces/interface/description",
    "/jc:configuration/interfaces/interface/mac",
    "/jc:configuration/interfaces/interface/mtu",
    "/jc:configuration/interfaces/interface/name",
    "/jc:configuration/interfaces/interface/native-vlan-id",
    "/jc:configuration/interfaces/interface/unit/alias",
    "/jc:configuration/interfaces/interface/unit/description",
    "/jc:configuration/interfaces/interface/unit/encapsulation",
    "/jc:configuration/interfaces/interface/unit/family/inet",
    "/jc:configuration/interfaces/interface/unit/family/inet/address/name",
    "/jc:configuration/interfaces/interface/unit/family/inet6",
    "/jc:configuration/interfaces/interface/unit/family/inet6/address/name",
    "/jc:configuration/interfaces/interface/unit/family/iso",
    "/jc:configuration/interfaces/interface/unit/family/iso/address/name",
    "/jc:configuration/interfaces/interface/unit/mac",
    "/jc:configuration/interfaces/interface/unit/mtu",
    "/jc:configuration/interfaces/interface/unit/name",
    "/jc:configuration/interfaces/interface/unit/vlan-id",
    "/jc:configuration/protocols/bgp/group/authentication-algorithm",
    "/jc:configuration/protocols/bgp/group/authentication-key",
    "/jc:configuration/protocols/bgp/group/authentication-key-chain",
    "/jc:configuration/protocols/bgp/group/description",
    "/jc:configuration/protocols/bgp/group/export",
    "/jc:configuration/protocols/bgp/group/family/evpn/signaling",
    "/jc:configuration/protocols/bgp/group/family/inet-vpn/unicast",
    "/jc:configuration/protocols/bgp/group/family/inet6-vpn/unicast",
    "/jc:configuration/protocols/bgp/group/family/route-target",
    "/jc:configuration/protocols/bgp/group/hold-time",
    "/jc:configuration/protocols/bgp/group/local-address",
    "/jc:configuration/protocols/bgp/group/name",
    "/jc:configuration/protocols/bgp/group/neighbor/description",
    "/jc:configuration/protocols/bgp/group/neighbor/name",
    "/jc:configuration/protocols/bgp/group/neighbor/passive",
    "/jc:configuration/protocols/bgp/group/tcp-mss",
    "/jc:configuration/protocols/bgp/group/tcpao-auth-mismatch",
    "/jc:configuration/protocols/bgp/group/type",
    "/jc:configuration/protocols/bgp/log-updown",
    "/jc:configuration/protocols/isis/interface/family/name",
    "/jc:configuration/protocols/isis/interface/ldp-synchronization",
    "/jc:configuration/protocols/isis/interface/ldp-synchronization/disable",
    "/jc:configuration/protocols/isis/interface/ldp-synchronization/hold-time",
    "/jc:configuration/protocols/isis/interface/level/disable",
    "/jc:configuration/protocols/isis/interface/level/metric",
    "/jc:configuration/protocols/isis/interface/level/name",
    "/jc:configuration/protocols/isis/interface/lsp-interval",
    "/jc:configuration/protocols/isis/interface/name",
    "/jc:configuration/protocols/isis/interface/passive",
    "/jc:configuration/protocols/isis/interface/passive/remote-node-id",
    "/jc:configuration/protocols/isis/interface/passive/remote-node-iso",
    "/jc:configuration/protocols/isis/interface/point-to-point",
    "/jc:configuration/protocols/isis/level/authentication-key",
    "/jc:configuration/protocols/isis/level/authentication-type",
    "/jc:configuration/protocols/isis/level/disable",
    "/jc:configuration/protocols/isis/level/name",
    "/jc:configuration/protocols/isis/level/no-csnp-authentication",
    "/jc:configuration/protocols/isis/level/no-hello-authentication",
    "/jc:configuration/protocols/isis/level/no-psnp-authentication",
    "/jc:configuration/protocols/isis/level/wide-metrics-only",
    "/jc:configuration/protocols/isis/lsp-lifetime",
    "/jc:configuration/protocols/ldp/interface/disable",
    "/jc:configuration/protocols/ldp/interface/hello-interval",
    "/jc:configuration/protocols/ldp/interface/hold-time",
    "/jc:configuration/protocols/ldp/interface/name",
    "/jc:configuration/protocols/ldp/interface/transport-address",
    "/jc:configuration/protocols/ldp/preference",
    "/jc:configuration/protocols/ldp/transport-address",
    "/jc:configuration/protocols/mpls/interface/disable",
    "/jc:configuration/protocols/mpls/interface/name",
    "/jc:configuration/protocols/mpls/no-propagate-ttl",
    "/jc:configuration/rcsid",
    "/jc:configuration/routing-instances/instance/instance-type",
    "/jc:configuration/routing-instances/instance/interface/any",
    "/jc:configuration/routing-instances/instance/interface/multicast",
    "/jc:configuration/routing-instances/instance/interface/name",
    "/jc:configuration/routing-instances/instance/interface/primary",
    "/jc:configuration/routing-instances/instance/interface/unicast",
    "/jc:configuration/routing-instances/instance/name",
    "/jc:configuration/routing-instances/instance/protocols/bgp/group/export",
    "/jc:configuration/routing-instances/instance/protocols/bgp/group/import",
    "/jc:configuration/routing-instances/instance/protocols/bgp/group/name",
    "/jc:configuration/routing-instances/instance/protocols/bgp/group/neighbor/as-override",
    "/jc:configuration/routing-instances/instance/protocols/bgp/group/neighbor/authentication-algorithm",
    "/jc:configuration/routing-instances/instance/protocols/bgp/group/neighbor/authentication-key",
    "/jc:configuration/routing-instances/instance/protocols/bgp/group/neighbor/description",
    "/jc:configuration/routing-instances/instance/protocols/bgp/group/neighbor/multihop",
    "/jc:configuration/routing-instances/instance/protocols/bgp/group/neighbor/multihop/no-nexthop-change",
    "/jc:configuration/routing-instances/instance/protocols/bgp/group/neighbor/multihop/ttl",
    "/jc:configuration/routing-instances/instance/protocols/bgp/group/neighbor/name",
    "/jc:configuration/routing-instances/instance/protocols/bgp/group/neighbor/peer-as",
    "/jc:configuration/routing-instances/instance/protocols/bgp/group/passive",
    "/jc:configuration/routing-instances/instance/route-distinguisher",
    "/jc:configuration/routing-instances/instance/vrf-table-label",
    "/jc:configuration/routing-instances/instance/vrf-target/auto",
    "/jc:configuration/routing-instances/instance/vrf-target/community",
    "/jc:configuration/routing-instances/instance/vrf-target/export",
    "/jc:configuration/routing-instances/instance/vrf-target/import",
    "/jc:configuration/routing-options/autonomous-system/as-number",
    "/jc:configuration/system/host-name",
    "/jc:configuration/system/services",
    "/jc:configuration/system/services/netconf/rfc-compliant",
    "/jc:configuration/system/services/netconf/yang-compliant",
    "/jc:configuration/version",
]
        filter_schema(dt.root, paths)
        return dt

    spec = orchestron.build.SysSpec("sorespo", [
        cfs_layer,
        inter_layer,
        rfs_layer,
    ], [
        orchestron.build.DeviceType.from_dir(fc, "CiscoIosXr_24_1_ncs55a1", "yang/CiscoIosXr_24_1_ncs55a1"),
        orchestron.build.DeviceType.from_dir(fc, "JuniperCRPD_23_4R1_9", "yang/JuniperCRPD_23_4R1_9"),
        orchestron.build.DeviceType.from_dir(fc, "NokiaSRLinux_25_3_2", "yang/NokiaSRLinux_25_3_2"),
    ])
    compiled_spec = spec.compile()
    transform_list_order(transform_filter(compiled_spec.dev_types["JuniperCRPD_23_4R1_9"]))
    compiled_spec.gen_app(fc, "../src/")

    env.exit(0)
