name: Test

on:
  push:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - id: setup-acton
        uses: actonlang/setup-acton@v1
        with:
          channel: 'tip'
      - name: "Check out repository code"
        uses: actions/checkout@v4
      - name: "Cache acton stuff"
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/acton
            out
          key: acton-${{ hashFiles('**/build.act.json') }}-${{ steps.setup-acton.outputs.version }}
      - name: "Ensure generated code is up to date"
        run: |
          make gen
          git diff --exit-code
      - run: acton build
      - run: acton test
      - run: acton test perf
      - uses: actions/upload-artifact@v4
        with:
          name: respnet-amd64
          path: out/bin/respnet
      - run: acton build --target aarch64-linux-gnu.2.27
      - uses: actions/upload-artifact@v4
        with:
          name: respnet-aarch64
          path: out/bin/respnet

  net-test:
    strategy:
      fail-fast: false
      matrix:
        TESTENV: [quicklab, quicklab-crpd, quicklab-notconf, quicklab-srl]
        ARCH: [amd64, aarch64]
        exclude:
          # No Cisco IOS XRd support for aarch64 :/
          - TESTENV: quicklab
            ARCH: aarch64
    runs-on: ${{ matrix.arch == 'amd64' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    env:
      IMAGE_PATH: ${{ secrets.IMAGE_PATH || format('ghcr.io/{0}/', github.repository) }}
    needs: build-and-test
    steps:
      - name: Set up env for containers
        run: |
          # IOS XRd
          sudo sysctl -w fs.inotify.max_user_instances=64000
          # cRPD
          sudo apt-get update
          sudo apt-get install -qy linux-modules-extra-$(uname -r)
          sudo modprobe mpls_router mpls_gso vrf
      - name: "Check out repository code"
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: respnet-${{ matrix.ARCH }}
          path: out/bin/
      - run: chmod a+x out/bin/respnet
      - name: "Check out licenses repo"
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/licenses
          path: licenses
          ssh-key: ${{ secrets.LICENSES_PRIVATE_KEY }}
      # If we're using IMAGE_PATH=ghcr.io/... login to ghcr.io using GITHUB_TOKEN
      # TODO: what about other (external) registries that require login?
      - name: Login to ghcr.io
        if: ${{ startsWith(env.IMAGE_PATH, 'ghcr.io') }}
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: "Start quicklab"
        run: |
          if [ "${{ matrix.TESTENV }}" = "quicklab" ]; then
            make -C test/${{ matrix.TESTENV }} start wait WAIT=240
            echo "Sleeping for 60s to give IOS XRd more time to get ready ..."
            sleep 60
          elif [ "${{ matrix.TESTENV }}" = "quicklab-srl" ]; then
            make -C test/${{ matrix.TESTENV }} start wait
            echo "Sleeping for 60s to give SR Linux more time to get ready ..."
            sleep 60
          else
            make -C test/${{ matrix.TESTENV }} start wait
          fi
      - name: "Configure quicklab"
        run: |
          make -C test/${{ matrix.TESTENV }} copy run-and-configure
      - name: "Run quicklab tests"
        run: |
          timeout 120 bash -c 'until make -C test/${{ matrix.TESTENV }} test; do echo "Retrying..."; sleep 2; done'
      - run: |
          make -C test/${{ matrix.TESTENV }} save-logs
        if: ${{ always() }}
      - uses : actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.TESTENV }}-${{ matrix.ARCH }}
          path: test/${{ matrix.TESTENV }}/logs
        if: ${{ always() }}
