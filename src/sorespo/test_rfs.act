import logging
import testing
import xml

import orchestron.ttt
import orchestron.device

import sorespo.rfs
from sorespo.layers.y_2 import orchestron_rfs__rfs__backbone_interface__remote, \
    orchestron_rfs__rfs__backbone_interface__local

proc def _test_rfs_bbinterface1(t: testing.SyncT):
    modeled_input = sorespo.rfs.BBInterface.input_type()(
        name="GigabitEthernet0/0/0/0",
        ipv4_address="10.0.7.1",
        ipv4_prefix_length=30,
        remote=orchestron_rfs__rfs__backbone_interface__remote(
            device="FRA-CORE-1",
            interface="GigabitEthernet0/0/0/0"
        ),
        local=orchestron_rfs__rfs__backbone_interface__local(
            device="AMS-CORE-1"
        )
    )

    mock_di = orchestron.ttt.DeviceInfo("AMS-CORE-1",
        {"Cisco-IOS-XR-um-hostname-cfg": orchestron.device.ModCap("Cisco-IOS-XR-um-hostname-cfg", "http://cisco.com/ns/yang/Cisco-IOS-XR-um-hostname-cfg")}
    )
    transform = sorespo.rfs.BBInterface(t.log_handler)
    out = transform.transform(modeled_input, mock_di).to_gdata()
    return out.to_xmlstr()

proc def _test_rfs_bbinterface2(t: testing.SyncT):
    xmlin = """<backbone-interface xmlns="http://example.com/sorespo-rfs">
  <name>eth1</name>
  <ipv4-address>10.0.20.2/30</ipv4-address>
  <ipv4-prefix-length>30</ipv4-prefix-length>
  <remote>
      <device>FRA-CORE-1</device>
      <interface>GigabitEthernet0/0/0/1</interface>
  </remote>
  <local>
      <device>AMS-CORE-1</device>
  </local>
</backbone-interface>"""

    mock_di = orchestron.ttt.DeviceInfo("STO-CORE-1",
        {"http://xml.juniper.net/netconf/junos/1.0": orchestron.device.ModCap("http://xml.juniper.net/netconf/junos/1.0", "http://xml.juniper.net/netconf/junos/1.0")}
    )
    transform = sorespo.rfs.BBInterface(t.log_handler)
    out, _ = transform.transform_xml(xml.decode(xmlin), mock_di)
    return out.to_xmlstr()
