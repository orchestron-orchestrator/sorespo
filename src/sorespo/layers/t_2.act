# WARNING WARNING WARNING WARNING WARNING
# DO NOT MODIFY THIS FILE!! This file is generated!
# WARNING WARNING WARNING WARNING WARNING

import logging

import orchestron.device as odev
import orchestron.ttt as ttt
import yang.adata
import yang.gdata

import sorespo.rfs

from sorespo.layers.y_2 import orchestron_rfs__rfs__backbone_interface__memory
from sorespo.layers.y_2 import orchestron_rfs__rfs__backbone_interface_entry
from sorespo.layers.y_2 import orchestron_rfs__rfs__backbone_interface__dynstate

def get_ttt(lower: ?ttt.Layer, dev_registry: odev.DeviceRegistry, log_handler: ?logging.Handler=None) -> proc(list[str],?ttt.Layer)->ttt.Node:
    r = ttt.Container({"device": ttt.List(ttt.Device(dev_registry, log_handler), ['name'], ['string'], ns='http://orchestron.org/yang/orchestron-rfs.yang', module='orchestron-rfs'), "rfs": ttt.List(ttt.Container({"base-config": ttt.List(ttt.RFSTransform(sorespo.rfs.BaseConfig, dev_registry, None, lower, log_handler), ['name'], ['string'], ns='http://example.com/sorespo-rfs', module='sorespo-rfs'), "backbone-interface": ttt.List(ttt.RFSTransform(sorespo.rfs.BBInterface, dev_registry, BBInterfaceTransformCtor, lower, log_handler), ['name'], ['string'], ns='http://example.com/sorespo-rfs', module='sorespo-rfs'), "ibgp-neighbor": ttt.List(ttt.RFSTransform(sorespo.rfs.IbgpNeighbor, dev_registry, None, lower, log_handler), ['address'], ['union'], ns='http://example.com/sorespo-rfs', module='sorespo-rfs'), "vrf": ttt.List(ttt.RFSTransform(sorespo.rfs.Vrf, dev_registry, None, lower, log_handler), ['name'], ['string'], ns='http://example.com/sorespo-rfs', module='sorespo-rfs'), "vrf-interface": ttt.List(ttt.RFSTransform(sorespo.rfs.VrfInterface, dev_registry, None, lower, log_handler), ['name'], ['string'], ns='http://example.com/sorespo-rfs', module='sorespo-rfs'), "ebgp-customer": ttt.List(ttt.RFSTransform(sorespo.rfs.EbgpCustomer, dev_registry, None, lower, log_handler), ['vrf', 'address'], ['string', 'union'], ns='http://example.com/sorespo-rfs', module='sorespo-rfs')}), ['name'], ['string'], ns='http://orchestron.org/yang/orchestron-rfs.yang', module='orchestron-rfs')})
    return r

def BBInterfaceTransformCtor(params: ttt.TransformActorParams) -> ?proc(yang.gdata.Node, ?yang.gdata.Node) -> None:
    _update_dynstate = params.update_dynstate
    def update_dynstate_type_wrapper(dynstate: ?orchestron_rfs__rfs__backbone_interface__dynstate):
        _update_dynstate(dynstate)
    act = sorespo.rfs.BBInterfaceTransform(update_dynstate_type_wrapper, ttt.expect(params.dev, "Missing expected DeviceMgr param to sorespo.rfs.BBInterfaceTransform."))
    return proc lambda c, m: act.on_conf(orchestron_rfs__rfs__backbone_interface_entry.from_gdata(c), orchestron_rfs__rfs__backbone_interface__memory.from_gdata(m) if m is not None else None)
